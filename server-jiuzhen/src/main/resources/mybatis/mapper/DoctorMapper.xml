<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiuzhen.background.mapper.DoctorMapper" >
  <resultMap id="BaseResultMap" type="com.jiuzhen.background.entity.Doctor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="doctorResult" type="com.jiuzhen.background.entity.Doctor">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, detail, department_id, headimg
  </sql>
  <sql id="doctorList" >
    doctor.id as id,
    doctor.name as name,
    doctor.detail as detail,
    doctor.department_id as department_id,
    doctor.headimg as headimg
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from doctor
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAlldoctor" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from doctor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jiuzhen.background.entity.Doctor" >
    insert into doctor (id, name, detail, 
      department_id, headimg)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{headimg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuzhen.background.entity.Doctor" >
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="headimg != null" >
        headimg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="headimg != null" >
        #{headimg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuzhen.background.entity.Doctor" >
    update doctor
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="headimg != null" >
        headimg = #{headimg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuzhen.background.entity.Doctor" >
    update doctor
    set name = #{name,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      headimg = #{headimg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectdoctorByName" resultMap="doctorResult">
    select <include refid="doctorList" />
    from doctor
    inner join department on doctor.department_id = department.id
    where doctor.department_id = #{departmentId}
    and doctor.name like '%${doctorName}%'
  </select>
  <select id="selectAll" resultMap="doctorResult">
    select <include refid="doctorList" />
    from doctor
    inner join department on doctor.department_id = department.id
    where doctor.department_id = #{departmentId}
  </select>
</mapper>